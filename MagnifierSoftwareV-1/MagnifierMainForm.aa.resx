<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="FullScreenMouse.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>